{"ast":null,"code":"import { Router } from '@angular/router';\nimport { HardcodedAuthenticationService } from '../service/hardcoded-authentication.service';\nimport { BasicAuthenticationService } from '../service/basic-authentication.service';\nimport { TodoDataService } from '../service/data/todo-data.service';\nimport { EncrDecrServiceService } from '../service/encr-decr-service.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../service/hardcoded-authentication.service\";\nimport * as i3 from \"../service/basic-authentication.service\";\nimport * as i4 from \"../service/data/todo-data.service\";\nimport * as i5 from \"../service/encr-decr-service.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"../app-spinner/app-spinner.component\";\nfunction LoginComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5)(2, \"div\", 6)(3, \"div\", 7);\n    i0.ɵɵelement(4, \"app-app-spinner\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction LoginComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.errorMsg);\n  }\n}\nfunction LoginComponent_form_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 9);\n    i0.ɵɵlistener(\"submit\", function LoginComponent_form_7_Template_form_submit_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.handleLoginThroughMongoDB());\n    });\n    i0.ɵɵelementStart(1, \"div\", 10)(2, \"div\", 11)(3, \"div\", 12)(4, \"p\", 13);\n    i0.ɵɵtext(5, \"Login\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 14)(7, \"div\", 15)(8, \"div\", 16)(9, \"div\", 17)(10, \"input\", 18);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_form_7_Template_input_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r0.username, $event) || (ctx_r0.username = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"br\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 16)(13, \"div\", 17)(14, \"input\", 19);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_form_7_Template_input_ngModelChange_14_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r0.password, $event) || (ctx_r0.password = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelement(15, \"input\", 20);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r0.username);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r0.password);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    router;\n    hardcodedAuthenticationService;\n    basicAuthService;\n    DBservise;\n    encryptService;\n    username = '';\n    password = '';\n    invalidLogin = false;\n    errorMsg = 'Invalid Credential';\n    progress = 0;\n    progressBar = document.querySelector('.progress-bar');\n    intervalId;\n    showProgress;\n    doNotShowLoginForm;\n    showSpinner;\n    constructor(router, hardcodedAuthenticationService, basicAuthService, DBservise, encryptService) {\n      this.router = router;\n      this.hardcodedAuthenticationService = hardcodedAuthenticationService;\n      this.basicAuthService = basicAuthService;\n      this.DBservise = DBservise;\n      this.encryptService = encryptService;\n    }\n    ngOnInit() {}\n    handleJWTBasicAuthLogin() {\n      this.invalidLogin = false;\n      this.showProgress = true;\n      this.doNotShowLoginForm = true;\n      this.showSpinner = true;\n      this.basicAuthService.excuteJWTAuthenticationService(null, this.password, this.username, null, \"false\").subscribe(data => {\n        const getDownloadProgress = () => {\n          if (this.progress <= 251) {\n            console.log(this.progress);\n            this.progress = this.progress + 1;\n            this.showProgress = true;\n            this.doNotShowLoginForm = true;\n            this.showSpinner = true;\n          } else {\n            clearInterval(this.intervalId);\n            this.showProgress = false;\n            this.doNotShowLoginForm = false;\n            this.invalidLogin = false;\n            this.showSpinner = false;\n          }\n        };\n        this.router.navigate(['main', this.username]);\n        this.invalidLogin = false;\n      }, error => {\n        this.showSpinner = false;\n        this.doNotShowLoginForm = false;\n        this.invalidLogin = true;\n        this.username = '';\n        this.password = '';\n      });\n    }\n    handleLoginThroughPHP() {\n      this.invalidLogin = false;\n      this.showProgress = true;\n      this.doNotShowLoginForm = true;\n      this.showSpinner = true;\n      var encryptPassword = this.encryptService.testEncrypt(this.password);\n      this.DBservise.getUserPHP(this.username, encryptPassword).subscribe(data => {\n        const getDownloadProgress = () => {\n          if (this.progress <= 101) {\n            sessionStorage.setItem('verifiedUser', JSON.parse(JSON.stringify(data)).user_name);\n            sessionStorage.setItem('email', JSON.parse(JSON.stringify(data)).user_email);\n            sessionStorage.setItem('phone', JSON.parse(JSON.stringify(data)).user_mobileno);\n            sessionStorage.setItem('id', JSON.parse(JSON.stringify(data)).id);\n            sessionStorage.setItem('pic_type', JSON.parse(JSON.stringify(data)).image_type);\n            this.progress = this.progress + 1;\n            this.showProgress = true;\n            this.doNotShowLoginForm = true;\n            this.showSpinner = true;\n          } else {\n            clearInterval(this.intervalId);\n            this.showProgress = false;\n            this.doNotShowLoginForm = false;\n            this.invalidLogin = false;\n            this.showSpinner = false;\n            this.router.navigate(['main', JSON.parse(JSON.stringify(data)).user_name]);\n          }\n        };\n        this.intervalId = setInterval(getDownloadProgress, 9);\n        this.invalidLogin = false;\n      }, error => {\n        this.showSpinner = false;\n        this.doNotShowLoginForm = false;\n        this.invalidLogin = true;\n        this.username = '';\n        this.password = '';\n      });\n    }\n    handleLoginThroughMongoDB() {\n      this.invalidLogin = false;\n      this.showProgress = true;\n      this.doNotShowLoginForm = true;\n      this.showSpinner = true;\n      var encryptPassword = this.encryptService.testEncrypt(this.password);\n      this.DBservise.getUserMongoDB(this.username, encryptPassword).subscribe(data => {\n        const getDownloadProgress = () => {\n          if (this.progress <= 101) {\n            sessionStorage.setItem('verifiedUser', JSON.parse(JSON.stringify(data)).userName);\n            sessionStorage.setItem('email', JSON.parse(JSON.stringify(data)).userEmail);\n            sessionStorage.setItem('phone', JSON.parse(JSON.stringify(data)).userPhoneNumber);\n            sessionStorage.setItem('id', JSON.parse(JSON.stringify(data))._id);\n            this.progress = this.progress + 1;\n            this.showProgress = true;\n            this.doNotShowLoginForm = true;\n            this.showSpinner = true;\n          } else {\n            clearInterval(this.intervalId);\n            this.showProgress = false;\n            this.doNotShowLoginForm = false;\n            this.invalidLogin = false;\n            this.showSpinner = false;\n            this.router.navigate(['main', JSON.parse(JSON.stringify(data)).userName]);\n          }\n        };\n        this.intervalId = setInterval(getDownloadProgress, 9);\n        this.invalidLogin = false;\n      }, error => {\n        this.showSpinner = false;\n        this.doNotShowLoginForm = false;\n        this.invalidLogin = true;\n        this.username = '';\n        this.password = '';\n      });\n    }\n    static ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HardcodedAuthenticationService), i0.ɵɵdirectiveInject(i3.BasicAuthenticationService), i0.ɵɵdirectiveInject(i4.TodoDataService), i0.ɵɵdirectiveInject(i5.EncrDecrServiceService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 9,\n      vars: 3,\n      consts: [[\"style\", \"height: 1000px; width: 200px;\", 4, \"ngIf\"], [1, \"container\", 2, \"height\", \"500px\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\"], [\"action\", \"\", 3, \"submit\", 4, \"ngIf\"], [2, \"height\", \"1000px\", \"width\", \"200px\"], [1, \"wrapper\"], [1, \"overlay\"], [1, \"spinner-wrapper\"], [1, \"alert\", \"alert-warning\"], [\"action\", \"\", 3, \"submit\"], [1, \"container\", \"register-form\"], [1, \"form\"], [1, \"no\"], [2, \"align-content\", \"center\", \"font-size\", \"25px\"], [1, \"form-content\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"form-group\"], [\"type\", \"text\", \"placeholder\", \"Enter Email *\", \"name\", \"username\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"password\", \"placeholder\", \"Enter Password *\", \"name\", \"password\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", \"name\", \"\", \"value\", \"Submit\", 1, \"btnSubmit\", 2, \"width\", \"70px\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"br\");\n          i0.ɵɵtemplate(1, LoginComponent_div_1_Template, 5, 0, \"div\", 0);\n          i0.ɵɵelementStart(2, \"div\");\n          i0.ɵɵelement(3, \"br\")(4, \"br\");\n          i0.ɵɵelementStart(5, \"div\", 1);\n          i0.ɵɵtemplate(6, LoginComponent_div_6_Template, 2, 1, \"div\", 2)(7, LoginComponent_form_7_Template, 16, 2, \"form\", 3);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(8, \"br\");\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.showSpinner);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.invalidLogin);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.doNotShowLoginForm);\n        }\n      },\n      dependencies: [i6.NgIf, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.NgModel, i7.NgForm, i8.AppSpinnerComponent],\n      styles: [\"#custom[_ngcontent-%COMP%]{width:100%}.no[_ngcontent-%COMP%]{text-align:center;height:80px;background:-webkit-linear-gradient(left,#0072ff,#8811c5);color:#fff;font-weight:700;line-height:80px}.form-content[_ngcontent-%COMP%]{padding:5%;border:1px solid #ced4da;margin-bottom:2%}.form-control[_ngcontent-%COMP%]{border-radius:1.5rem}.btnSubmit[_ngcontent-%COMP%]{border:none;border-radius:1.5rem;padding:1%;width:20%;cursor:pointer;background:#0062cc;color:#fff}\"]\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}