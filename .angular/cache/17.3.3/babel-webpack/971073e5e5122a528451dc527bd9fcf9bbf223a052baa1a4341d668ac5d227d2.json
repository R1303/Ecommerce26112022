{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { Todo, User, Address, Products, Cart, MyOrder, HomePage } from 'src/app/list-todos/list-todos.component';\nimport { API_URL } from 'src/app/app.constants';\nimport { EncrDecrServiceService } from '../encr-decr-service.service';\nimport { DatePipe } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../encr-decr-service.service\";\nimport * as i3 from \"@angular/common\";\nexport let TodoDataService = /*#__PURE__*/(() => {\n  class TodoDataService {\n    http;\n    encryptKey;\n    datepipe;\n    userdata;\n    cartData;\n    productData;\n    addressData;\n    productArray;\n    checkOutDetail;\n    expectedDate;\n    orderData;\n    useJavaMethod = true;\n    responseMessgae;\n    saveCartData;\n    constructor(http, encryptKey, datepipe) {\n      this.http = http;\n      this.encryptKey = encryptKey;\n      this.datepipe = datepipe;\n    }\n    reteriveAllTodos(username) {\n      try {\n        return this.http.get(`${API_URL}/user/${username}/todos`);\n      } catch (error) {\n        return this.http.get(`Error`);\n      }\n    }\n    reteriveAllUsers(username) {\n      try {\n        return this.http.get(`${API_URL}/getUserData/`);\n      } catch (error) {\n        return this.http.get(`Error`);\n      }\n    }\n    deleteTodos(id) {\n      try {\n        return this.http.delete(`${API_URL}/deleteUserById/${id}`);\n      } catch (error) {\n        return this.http.delete(`Error`);\n      }\n    }\n    getUser(id) {\n      try {\n        return this.http.get(`${API_URL}/getUserById/${id}`);\n      } catch (error) {\n        return this.http.get(`Error`);\n      }\n    }\n    getTodo(username, id) {\n      try {\n        return this.http.get(`${API_URL}/getTodoById/${username}/todo/${id}`);\n      } catch (error) {\n        return this.http.get(`Error`);\n      }\n    }\n    updateTodo(username, id, todo) {\n      try {\n        return this.http.put(`${API_URL}/UpdateTodo/${username}/todos/${id}`, todo);\n      } catch (error) {}\n    }\n    UpdateUser(id, user) {\n      try {\n        return this.http.put(`${API_URL}/UpdateUser/${id}`, user);\n      } catch (error) {}\n    }\n    getAddressUsingUserID(id) {\n      try {\n        return this.http.get(`${API_URL}/getAddressById/${id}`);\n      } catch (error) {\n        return this.http.get(`Error`);\n      }\n    }\n    addAddress(address) {\n      try {\n        return this.http.post(`${API_URL}/addAddress`, address);\n      } catch (error) {}\n    }\n    UpdateAddress(id, address) {\n      try {\n        return this.http.put(`${API_URL}/UpdateAddress/${id}`, address);\n      } catch (error) {}\n    }\n    deleteAddress(id) {\n      try {\n        return this.http.delete(`${API_URL}/deleteAddressById/${id}`);\n      } catch (error) {\n        return this.http.delete(`Error`);\n      }\n    }\n    addProduct(product, imageData1, imageData2, imageData3) {\n      try {\n        return this.http.post(`http://localhost:5000/uploadImage1`, imageData1).subscribe(response => {\n          this.http.post(`http://localhost:5000/uploadImage2`, imageData2).subscribe(response => {\n            this.http.post(`http://localhost:5000/uploadImage3`, imageData3).subscribe(response => {\n              this.http.post(`http://localhost:5000/upload`, product).subscribe(response => {\n                this.responseMessgae = response;\n                return this.responseMessgae.status;\n              });\n            });\n          });\n        });\n      } catch (error) {\n        alert(error);\n      }\n    }\n    allProduct() {\n      try {\n        this.http.get(`${API_URL}/allProduct`).subscribe(response => {\n          this.productArray = response;\n        });\n      } catch (error) {}\n    }\n    allProductonShopScreen() {\n      var key = this.encryptKey.testEncrypt(\"VerifiedUserForAccesingData\");\n      try {\n        return this.http.get(`${API_URL}/allProduct/${key}`);\n      } catch (error) {}\n    }\n    getProductArray() {\n      return this.productArray;\n    }\n    getProductById(id) {\n      try {\n        return this.http.get(`${API_URL}/getProductById/${id}`);\n      } catch (error) {}\n    }\n    deleteProduct(id) {\n      try {\n        return this.http.delete(`${API_URL}/deleteProductById/${id}`);\n      } catch (error) {\n        return this.http.delete(`Error`);\n      }\n    }\n    saveCart(product, qunatity, userId) {\n      return this.http.post(`${API_URL}/addProductIntoCart/${qunatity}/${userId}`, product);\n    }\n    getCartDetail(userId) {\n      return this.http.get(`${API_URL}/getCartDetail/${userId}`);\n    }\n    getCartDetailByProduct(productId, userId) {\n      return this.http.get(`${API_URL}/getCartDetailProduct/${productId}/${userId}`);\n    }\n    UpdateCart(id, Cart) {\n      try {\n        return this.http.put(`${API_URL}/UpdateCartItem/${id}`, Cart);\n      } catch (error) {}\n    }\n    deleteCartItem(id, userId) {\n      try {\n        return this.http.delete(`${API_URL}/deleteCartItemById/${id}/${userId}`);\n      } catch (error) {\n        return this.http.delete(`Error`);\n      }\n    }\n    setCheckOutDetail(checkOutDetail) {\n      this.checkOutDetail = checkOutDetail;\n    }\n    getCheckOutDetail() {\n      return this.checkOutDetail;\n    }\n    getOtp(mobile) {\n      return this.http.get(`${API_URL}/getOtp/${mobile}`);\n    }\n    verifyOtp(otp) {\n      return this.http.get(`${API_URL}/verifyOtp/${otp}`);\n    }\n    setOrderDetail(userId, checkOutDetail) {\n      try {\n        return this.http.put(`${API_URL}/setOrderDetail/${userId}`, checkOutDetail);\n      } catch (error) {}\n    }\n    allOrderDetail() {\n      return this.http.get(`${API_URL}/allOrderDetails`);\n    }\n    getOrderDetail(userId) {\n      return this.http.get(`${API_URL}/myOrderDetail/${userId}`);\n    }\n    getOrderDetailById(Id) {\n      return this.http.get(`${API_URL}/orderDetail/${Id}`);\n    }\n    updateOrder(order) {\n      try {\n        return this.http.put(`${API_URL}/UpdateOrder`, order);\n      } catch (error) {}\n    }\n    getProductByCategory(category) {\n      return this.http.get(`${API_URL}/getProductByCategory/${category}`);\n    }\n    getUrlData(url) {\n      try {\n        return this.http.post(`${API_URL}/downLoadVideoApi`, url);\n      } catch (error) {}\n    }\n    homePageDetail() {\n      try {\n        return this.http.get(`${API_URL}/home_page_detail`);\n      } catch (error) {}\n    }\n    //All PHP Methods Start Here ............................................\n    addTodo(user) {\n      try {\n        this.userdata = user;\n        var form = new FormData();\n        form.append(\"action\", \"add_user\");\n        form.append(\"name\", this.userdata.userName);\n        form.append(\"email\", this.userdata.userEmail);\n        form.append(\"password\", this.userdata.userPassword);\n        form.append(\"mobile\", this.userdata.userPhoneNumber);\n        return this.http.post(`${API_URL}/insert_user.php`, form);\n      } catch (error) {\n        alert(error);\n      }\n    }\n    getUserPHP(email, pass) {\n      var form = new FormData();\n      form.append(\"action\", \"find_user\");\n      form.append(\"email\", email);\n      form.append(\"password\", pass);\n      return this.http.post(`${API_URL}/insert_user.php`, form);\n    }\n    allProductonPHP() {\n      try {\n        return this.http.get(`${API_URL}/allProduct.php?action=allProduct`);\n      } catch (error) {}\n    }\n    ProductByIdPHP(id) {\n      try {\n        return this.http.get(`${API_URL}/allProduct.php?action=findByID&id=` + id);\n      } catch (error) {}\n    }\n    getCartDetailByProductPHP(productId, userId) {\n      return this.http.get(`${API_URL}/allProduct.php?action=getCartDetailProduct&productId=` + productId + `&userId=` + userId);\n    }\n    getProductByCategoryPHP(category) {\n      return this.http.get(`${API_URL}/allProduct.php?action=getProductByCategory&category=` + category);\n    }\n    saveCartPHP(product, qunatity, userId) {\n      this.productData = product;\n      var total = this.productData.productPrice * qunatity;\n      var form = new FormData();\n      form.append(\"action\", \"addCart\");\n      form.append(\"productImage1\", this.productData.productImage1);\n      form.append(\"productName\", this.productData.productName);\n      form.append(\"productPrice\", this.productData.productPrice.toString());\n      form.append(\"quantity\", qunatity.toString());\n      form.append(\"total\", total.toString());\n      form.append(\"userFk\", userId);\n      form.append(\"productFk\", this.productData.id.toString());\n      return this.http.post(`${API_URL}/cartDetail.php`, form);\n    }\n    getCartDetailPHP(userId) {\n      return this.http.get(`${API_URL}/getCartData.php?action=getCartById&userFk=` + userId);\n    }\n    UpdateCartPHP(id, Cart) {\n      this.cartData = Cart;\n      var form = new FormData();\n      form.append(\"action\", \"updateCart\");\n      form.append(\"quantity\", this.cartData.quantity.toString());\n      form.append(\"total\", this.cartData.total.toString());\n      form.append(\"userFk\", this.cartData.fk_user.toString());\n      form.append(\"cartID\", this.cartData.id.toString());\n      try {\n        return this.http.post(`${API_URL}/cartDetail.php`, form);\n      } catch (error) {}\n    }\n    deleteCartItemPHP(id) {\n      var form = new FormData();\n      form.append(\"action\", \"deleteCart\");\n      form.append(\"cartID\", id);\n      try {\n        return this.http.post(`${API_URL}/cartDetail.php`, form);\n      } catch (error) {\n        return this.http.delete(`Error`);\n      }\n    }\n    getAddressUsingUserIDPHP(id) {\n      try {\n        return this.http.get(`${API_URL}/getAddressData.php?action=getAddressById&userFk=` + id);\n      } catch (error) {\n        return this.http.get(`Error`);\n      }\n    }\n    addAddressPHP(address) {\n      this.addressData = address;\n      var form = new FormData();\n      form.append(\"action\", \"addAddress\");\n      form.append(\"address_type\", this.addressData.address_type);\n      form.append(\"city\", this.addressData.city);\n      form.append(\"address_line_1\", this.addressData.address_line_1);\n      form.append(\"address_line_2\", this.addressData.address_line_2);\n      form.append(\"pincode\", this.addressData.pincode.toString());\n      form.append(\"state\", this.addressData.state);\n      form.append(\"user_id\", this.addressData.userId.toString());\n      try {\n        return this.http.post(`${API_URL}/addressAction.php`, form);\n      } catch (error) {}\n    }\n    UpdateAddressPHP(user_id, address) {\n      this.addressData = address;\n      var form = new FormData();\n      form.append(\"action\", \"updateAddress\");\n      form.append(\"address_type\", this.addressData.address_type);\n      form.append(\"city\", this.addressData.city);\n      form.append(\"address_line_1\", this.addressData.address_line_1);\n      form.append(\"address_line_2\", this.addressData.address_line_2);\n      form.append(\"pincode\", this.addressData.pincode.toString());\n      form.append(\"state\", this.addressData.state);\n      form.append(\"user_id\", user_id);\n      form.append(\"address_id\", this.addressData._id.toString());\n      try {\n        return this.http.post(`${API_URL}/addressAction.php`, form);\n      } catch (error) {}\n    }\n    deleteAddressPHP(id) {\n      var form = new FormData();\n      form.append(\"action\", \"deleteAddress\");\n      form.append(\"address_id\", id);\n      try {\n        return this.http.post(`${API_URL}/addressAction.php/`, form);\n      } catch (error) {\n        return this.http.delete(`Error`);\n      }\n    }\n    setOrderDetailPHP(cart, checkOutDetail) {\n      this.cartData = cart;\n      var form = new FormData();\n      form.append(\"action\", \"addOrder\");\n      form.append(\"city\", this.checkOutDetail.city);\n      form.append(\"address_line_1\", this.checkOutDetail.line1);\n      form.append(\"address_line_2\", this.checkOutDetail.line2);\n      form.append(\"pincode\", this.checkOutDetail.pincode.toString());\n      form.append(\"fk_product\", this.cartData.fk_product.toString());\n      form.append(\"productImage1\", this.cartData.product_image1);\n      form.append(\"productName\", this.cartData.product_name);\n      form.append(\"productPrice\", this.cartData.product_price.toString());\n      form.append(\"quantity\", this.cartData.quantity.toString());\n      form.append(\"state\", this.checkOutDetail.state);\n      form.append(\"total\", this.cartData.total.toString());\n      form.append(\"fk_user\", this.cartData.fk_user.toString());\n      form.append(\"status\", \"Confirmed\");\n      this.expectedDate = new Date();\n      this.expectedDate.setDate(this.expectedDate.getDate() + 7);\n      form.append(\"expected_date\", this.datepipe.transform(this.expectedDate, 'yyyy-MM-dd'));\n      form.append(\"order_date\", this.datepipe.transform(new Date(), 'yyyy-MM-dd'));\n      try {\n        return this.http.post(`${API_URL}/api/addOrderDetails`, form);\n      } catch (error) {}\n    }\n    allOrderDetailPHP() {\n      return this.http.get(`${API_URL}/getOrderDetail.php?action=allOrder`);\n    }\n    getOrderDetailPHP(userId) {\n      return this.http.get(`${API_URL}/getOrderDetail.php?action=getOrderByUserId&userFk=` + userId);\n    }\n    getOrderDetailByIdPHP(Id) {\n      return this.http.get(`${API_URL}/getOrderDetail.php?action=getOrderById&orderId=` + Id);\n    }\n    updateOrderPHP(order) {\n      this.orderData = order;\n      var form = new FormData();\n      form.append(\"action\", \"updateOrder\");\n      form.append(\"order_id\", this.orderData.id.toString());\n      form.append(\"status\", this.orderData.status);\n      try {\n        return this.http.post(`${API_URL}/orderDetail.php`, form);\n      } catch (error) {}\n    }\n    homePageDetailPHP() {\n      try {\n        return this.http.get(`https://ecommerce-1234.000webhostapp.com/home_page_detail.php`);\n      } catch (error) {}\n    }\n    UpdateUserPicPHP(id, file) {\n      var form = new FormData();\n      form.append(\"action\", 'update_user');\n      form.append(\"pic\", file);\n      form.append(\"userId\", id);\n      try {\n        return this.http.post(`${API_URL}/insert_user.php`, form);\n      } catch (error) {}\n    }\n    UpdateUserPhonePHP(id, mobile) {\n      var form = new FormData();\n      form.append(\"action\", 'update_user_phone');\n      form.append(\"mobile\", mobile);\n      form.append(\"userId\", id);\n      try {\n        return this.http.post(`${API_URL}/insert_user.php`, form);\n      } catch (error) {}\n    }\n    getUserByIdPHP(id) {\n      return this.http.get(`${API_URL}/user_data.php?id=` + id);\n    }\n    // -------------------------------------------------------------\n    getUserMongoDB(email, pass) {\n      return this.http.get(`${API_URL}/api/login/` + email + `/` + pass);\n    }\n    homePageDetailMongoDB() {\n      try {\n        return this.http.get(`${API_URL}/api/home_page_details`);\n      } catch (error) {}\n    }\n    allProductonShopScreenMongoDB() {\n      try {\n        return this.http.get(`${API_URL}/api/allProducts`);\n      } catch (error) {}\n    }\n    ProductByIdMongoDB(id) {\n      try {\n        return this.http.get(`${API_URL}/api/findById/` + id);\n      } catch (error) {}\n    }\n    addProuctMongoDB(product) {\n      return this.http.post(`${API_URL}/api/addProduct`, product);\n    }\n    getUserByIDMongoDB(id) {\n      try {\n        return this.http.get(`${API_URL}/api/findUserById/${id}`);\n      } catch (error) {\n        return this.http.get(`Error`);\n      }\n    }\n    getProductByCategoryMongoDB(category) {\n      return this.http.get(`${API_URL}/api/findProductByCategory/${category}`);\n    }\n    getCartDetailByProductMongoDB(productId, userId) {\n      return this.http.get(`${API_URL}/api/getCartDetailProduct/` + productId + `/` + userId);\n    }\n    UpdateCartMongoDB(id, Cart) {\n      this.cartData = Cart;\n      try {\n        return this.http.post(`${API_URL}/api/updateCartDetail`, this.cartData);\n      } catch (error) {}\n    }\n    saveCartMongoDB(cart) {\n      return this.http.post(`${API_URL}/api/saveCartDetail`, cart);\n    }\n    getCartDetailMongoDB(userId) {\n      return this.http.get(`${API_URL}/api/getCartByUserId/` + userId);\n    }\n    getAddressUsingUserIDMongoDB(id) {\n      try {\n        return this.http.get(`${API_URL}/api/getAddressByUserId/` + id);\n      } catch (error) {\n        return this.http.get(`Error`);\n      }\n    }\n    UpdateAddressMongoDB(user_id, address) {\n      // this.addressData=address;\n      // var form = new FormData();\n      //   form.append(\"action\", \"updateAddress\");\n      //   form.append(\"address_type\",this.addressData.address_type);\n      //   form.append(\"city\",this.addressData.city);\n      //   form.append(\"address_line_1\",this.addressData.address_line_1);\n      //   form.append(\"address_line_2\",this.addressData.address_line_2);\n      //   form.append(\"pincode\",this.addressData.pincode.toString());\n      //   form.append(\"state\",this.addressData.state);\n      //   form.append(\"user_id\",user_id);\n      //   form.append(\"address_id\",this.addressData._id.toString());\n      try {\n        return this.http.post(`${API_URL}/api/updateAddress`, address);\n      } catch (error) {}\n    }\n    addUserMongoDB(user) {\n      try {\n        return this.http.post(`${API_URL}/api/register`, user);\n      } catch (error) {\n        alert(error);\n      }\n    }\n    addAddressMongoDB(address) {\n      try {\n        return this.http.post(`${API_URL}/api/addAddress`, address);\n      } catch (error) {\n        alert(error);\n      }\n    }\n    deleteCartMongoDB(id) {\n      try {\n        return this.http.post(`${API_URL}/api/deleteCartItem/${id}`, id);\n      } catch (error) {\n        return this.http.delete(`Error`);\n      }\n    }\n    deleteCartItemMongoDB(id) {\n      try {\n        return this.http.post(`${API_URL}/api/deleteCartItemByID/${id}`, id);\n      } catch (error) {\n        return this.http.delete(`Error`);\n      }\n    }\n    deleteAddressMongoDB(id) {\n      try {\n        return this.http.delete(`${API_URL}/api/deleteAddressById/${id}`);\n      } catch (error) {\n        return this.http.delete(`Error`);\n      }\n    }\n    setOrderDetailMongoDB(cart, checkOutDetail) {\n      this.cartData = cart;\n      this.expectedDate = new Date();\n      this.expectedDate.setDate(this.expectedDate.getDate() + 7);\n      this.orderData = new MyOrder(this.cartData.id, this.cartData.product_image1, this.cartData.product_name, this.cartData.product_price, this.cartData.quantity, this.cartData.total, this.cartData.fk_user, this.cartData.fk_product, this.checkOutDetail.line1, this.checkOutDetail.line2, this.checkOutDetail.city, this.checkOutDetail.state, this.checkOutDetail.pincode, \"Confirmed\", this.datepipe.transform(new Date(), 'yyyy-MM-dd'), this.datepipe.transform(this.expectedDate, 'yyyy-MM-dd'));\n      try {\n        return this.http.post(`${API_URL}/api/addOrder`, this.orderData);\n      } catch (error) {}\n    }\n    getOrderDetailMongoDB(userId) {\n      return this.http.get(`${API_URL}/api/getOrderByUserId/` + userId);\n    }\n    getOrderDetailByOrderId(orderId) {\n      return this.http.get(`${API_URL}/api/getOrderByOrderId/` + orderId);\n    }\n    allOrderDetailMongoDB() {\n      return this.http.get(`${API_URL}/allOrderDetails`);\n    }\n    static ɵfac = function TodoDataService_Factory(t) {\n      return new (t || TodoDataService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.EncrDecrServiceService), i0.ɵɵinject(i3.DatePipe));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TodoDataService,\n      factory: TodoDataService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return TodoDataService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}